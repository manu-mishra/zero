---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zero
  labels:
    app: zero
spec:
  replicas: 1
  selector:
    matchLabels:
      service: zero
  template:
    metadata:
      labels:
        app: zero
        service: zero
        version: zero
    spec:
      containers:
       -  name : zero-proxy
          image: ghcr.io/manu-mishra/zero-proxy:0.0.2741930350
          imagePullPolicy: Always
          ports:
           -  containerPort: 8081
              protocol: TCP
          env:
            - name: ASPNETCORE_URLS
              value: http://+:8081
          volumeMounts:
          - name: zero-proxy-appsettings-volume
            mountPath: /app/Settings
          resources:
            requests:
              memory: "256Mi"
              cpu: "10m"

       -  name : zero-uishell
          image: ghcr.io/manu-mishra/zero-uishell:0.0.2741930350
          imagePullPolicy: Always
          ports:
           -  containerPort: 80
              protocol: TCP
          resources:
            requests:
              memory: "256Mi"
              cpu: "10m"
      imagePullSecrets:
       -  name: private-repo-secret
      volumes:
      - name: zero-proxy-appsettings-volume
        configMap:
          name: zero-proxy-appsetting
      serviceAccountName: zero
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: zero
---
apiVersion: v1
kind: Service
metadata:
  name: zero
  labels:
    app: zero
    service: zero
  annotations:
    service.beta.kubernetes.io/azure-load-balancer-internal: "true"
    service.beta.kubernetes.io/azure-load-balancer-internal-subnet: "snet-ingress"
spec:
  type: LoadBalancer
  ports:
    - name: http-zero
      port: 80
      targetPort: 8081
      protocol: TCP
  selector:
    service: zero
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: zero-proxy-appsetting
data:
  appsettings.json: |-
    {
      "Logging": {
        "LogLevel": {
          "Default": "Information",
          "Microsoft.AspNetCore": "Warning"
        }
      },
      "ReverseProxy": {
        "Routes": {
          "route1": {
            "ClusterId": "uibranding",
            "Match": {
              "Path": "/app/uibranding/{**remainder}"
            },
            "Transforms": [
              { "PathPattern": "/{**remainder}" }
            ]
          },
          "route2": {
            "ClusterId": "application1",
            "Match": {
              "Path": "/api/application1/{**remainder}"
            },
            "Transforms": [
              { "PathPattern": "/api/application1/{**remainder}" }
            ]
          },
          "route3": {
            "ClusterId": "application1",
            "Match": {
              "Path": "/app/application1/{**remainder}"
            },
            "Transforms": [
              { "PathPattern": "/{**remainder}" }
            ]
          },
          "routeDefault": {
            "ClusterId": "uishell",
            "Match": {
              "Path": "{**catch-all}"
            }
          }
        },
        "Clusters": {
          "application1": {
            "Destinations": {
              "destination1": {
                "Address": "http://app1.development.svc.cluster.local/"
              }
            }
          },
          "uibranding": {
            "Destinations": {
              "destination1": {
                "Address": "http://uibranding.development.svc.cluster.local/"
              }
            }
          },
          "uishell": {
            "Destinations": {
              "destination1": {
                "Address": "http://localhost:80/"
              }
            }
          }
        }
      }
    }